План - разделить класс CAModel на 3 класса.:
----
1) Написать кастомный слой который будет формировать ядро/фильтр Собеля, для угла. ++++++++++++++++++++++++++++++++++

2) Первый класс - "UpdateRule", это класс содержащий в себе всю нейросетевую часть, а текже все преобразования с
   тензором клеточного автомата. А именно - формирование ядра Собеля, в том числе с учетом угла поворота картинки,
   стадия наблюдения состояния соседних клеток через свёрточный слой для всех каналов тензора, и наконец пропуск
   результатов через два свёрточных слоя для формирования дельты для всех состояний. А также шаг обновления клеточного
   автомата. Выходом call метода должен быть набор клеток в новом состоянии. +++++++++++++++++++++++++++++++++++++++

3) Второй класс - "PetriDish", это класс в котором существует функционал создания и хранения тензоров, представляющих
   собой набор клеток, или "чашки Петри". А также формирования батча чашек во время обучения правила обновления
   состояний клеток в чашке петри. Кроме того, он же содержит нумерацию и назначения различных элементов вектора
   состояния клетки. ++++++++++++++++++++++++++++++++++++++++++++++

4) Надо написать еще класс UpdateRuleTrainer, который отвечал бы за функционал обучения нейронной сети, котороая
   является отвечает за универсальное правило обновления состояния клетки. ++++++++++++++++++++++++++++++++++++++++++

5) Третий класс - "MorphCA", это класс отвечающий за взаимодействие первых двух классов. В нем будет реализован метод
   обучения правила обновления состояний клеток, и финальный клеточный автомат, рост которого можно будет запустить, и
   пронаблюдать за этим процессом. В нем должен быть реализован методы "save", "load", "step", "run_growth". А также
   запись video, и gif файлов. Туда же запихнуть код отвечающий за работу с предобученными моделями.

6) Надо разобраться с тем что делать с демо файлами, там ведь будут "повреждения" и всякое такое.